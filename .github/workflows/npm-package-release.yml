name: NPM package release CI


on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-cache:
    name: Build Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node 18.17
        uses: actions/setup-node@v3
        with:
          node-version: '18.17'
      - name: Cache dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: 'node_modules'
      - if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: yarn --frozen-lockfile
  test-unit:
    runs-on: ubuntu-latest
    name: Run unit tests
    needs: build-cache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: 'node_modules'
      - run: yarn test
      - name: Generating coverage badges
        uses: jpb06/jest-badges-action@latest
        with:
          branches: master
  release:
    environment: production
    needs: build-cache
    runs-on: ubuntu-latest
    name: Release package to npm
    env:
       GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: 'node_modules'
      - run: yarn build
      # - run: echo "\n//nexus.itbts.net/repository/npm-local:_auth=$NPM_TOKEN\n" >> .npmrc
      # - run: npm config set registry=http://nexus.<your-domain>/repository/npm-local/
      # - run: npm set //nexus.<your-domain>/repository/npm-local/:_auth=$NPM_TOKEN 
      - run: npx semantic-release
  deploy-docs:
    needs:
      - test-unit
      - release 
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          path: 'node_modules'
      - run: yarn docs
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # upload entire directory
          path: './public'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2



  